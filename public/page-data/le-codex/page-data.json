{
    "componentChunkName": "component---src-templates-note-tsx",
    "path": "/le-codex",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Le Codex\",\n  \"tags\": [\"projet\", \"digital-garden\", \"web\", \"creative-coding\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"details\", null, mdx(\"summary\", null, mdx(\"h1\", null)), \"Il veux apprendre \\xE0 faire de la musique.\", mdx(\"p\", null, \"Pour devenir bon il doit comprendre les algorithmes.\"), mdx(\"p\", null, \"Il a compris les fonctions.\"), mdx(\"p\", null, \"-> Install VsCode + Python.\"), mdx(\"p\", null, \"comp\\xE9tences vis\\xE9s de l'\\xE9x\\xE9rcices.\"), mdx(\"p\", null, \"Faire un algorithme ne faisait appel qu'\\xE0 des fonctions dans la main.\"), mdx(\"p\", null, \"-> Step one :\\nfetch users input\"), mdx(\"p\", null, \"un truc en rapport avec la musique.\"), mdx(\"p\", null, \"rock paper scissors\"), mdx(\"h1\", null, \"Rock paper scissors in Python\"), mdx(\"p\", null, \"In think you know the rules of it.\"), mdx(\"p\", null, \"It is a game with 2 players.\\nOne will be the user and the other one will be a simple \\\"AI\\\".\"), mdx(\"h1\", null, \"Step 1 : initialisation\"), mdx(\"p\", null, \"your program must be called\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$: ttt.py\\n\")), mdx(\"p\", null, \"at the launch of the program it must display:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$: Welcome to the python tic tac toe game.\\n$: let's play !\\n\")), mdx(\"h1\", null, \"Step 2 : the game loop\"), mdx(\"p\", null, \"Then game loop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"        $: Choose a move: 1. Rock, 2. Paper, 3. Scissors\\nuser    $: 1\\n        $: Ready\\n        $: Get Set\\n        $: Go\\n        $: User did a rock and IA did a Scissors\\n        $: You win !\\n        $: Dashboard: User 1: | IA: 0\\n        $: \\n        $: Choose a move: 1. Rock, 2. Paper, 3. Scissors\\nuser    $: Paper\\n        $: etc...\\n\")), mdx(\"h1\", null, \"Step 3: Error management\"), mdx(\"p\", null, \"Bonus: Error management:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User can either type \\\"1. Rock\\\" , \\\"1\\\" or \\\"Rock\\\" other inputs must return an error\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"user     $: rocks\\n         $: Format error: try again\\nuser     $: rock1\\n         $: Format error: try again\\n         $: 1. Rock\\n\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\n\\n\\n```python\\nimport random\\n\\nrangeStart = 0\\nrangeEnd = 3\\nrandomVariable = random.randint(rangeStart, rangeEnd)\\nprint(randomVariable)\\n\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Square Drawer\"), mdx(\"p\", null, \"The program must display the following when launched\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$: Welcome to the square drawer\\n$: Choose a height\\n$user: 3\\n$: Choose a width\\n$user: 3\\n$: Here is a square of 3x3 dimension\\n---\\n| |\\n---\\n\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ad-tip\"\n  }, \"You will have to use 2 dimensionals array\\n\"))), mdx(\"details\", null, \" \", mdx(\"summary\", null, \"test\"), \"+ nested list 1 + nested list 2 + markdown list 2\"), mdx(\"p\", null, \"#Table of Contents\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#example\"\n  }, \"Qu'est-ce que le codex?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#example2\"\n  }, \"Example2\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#third-example\"\n  }, \"Third Example\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fourth-examplehttpwwwfourthexamplecom\"\n  }, \"Fourth Example\"))), mdx(\"h2\", null, \"Example\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"task name\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"task name\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"task name\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"task name\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"task name\", mdx(\"ul\", {\n    parentName: \"li\",\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"task name\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntitle: Le Codex\ntags:\n  - projet\n  - digital-garden\n  - web\n  - creative-coding\n---\n\n\n\n\n<details><summary><h1></h1></summary>\nIl veux apprendre à faire de la musique.\n\nPour devenir bon il doit comprendre les algorithmes.\n\nIl a compris les fonctions.\n\n-> Install VsCode + Python.\n\ncompétences visés de l'éxércices.\n\nFaire un algorithme ne faisait appel qu'à des fonctions dans la main.\n\n-> Step one : \nfetch users input\n\nun truc en rapport avec la musique.\n\nrock paper scissors\n# Rock paper scissors in Python\nIn think you know the rules of it.\n\nIt is a game with 2 players.\nOne will be the user and the other one will be a simple \"AI\".\n\n# Step 1 : initialisation\nyour program must be called\n```\n$: ttt.py\n```\nat the launch of the program it must display:\n```\n$: Welcome to the python tic tac toe game.\n$: let's play !\n```\n\n# Step 2 : the game loop\nThen game loop:\n```\n\t\t$: Choose a move: 1. Rock, 2. Paper, 3. Scissors\nuser    $: 1\n\t\t$: Ready\n\t\t$: Get Set\n\t\t$: Go\n\t\t$: User did a rock and IA did a Scissors\n\t\t$: You win !\n\t\t$: Dashboard: User 1: | IA: 0\n\t\t$: \n\t\t$: Choose a move: 1. Rock, 2. Paper, 3. Scissors\nuser\t$: Paper\n\t\t$: etc...\n```\n\n# Step 3: Error management\nBonus: Error management:\n- User can either type \"1. Rock\" , \"1\" or \"Rock\" other inputs must return an error\n ```\nuser\t $: rocks\n\t\t $: Format error: try again\nuser\t $: rock1\n\t\t $: Format error: try again\n\t\t $: 1. Rock\n```  \n\n\n\n```python\nimport random\n\nrangeStart = 0\nrangeEnd = 3\nrandomVariable = random.randint(rangeStart, rangeEnd)\nprint(randomVariable)\n\n```\n\n\n\n\n------------------------------\n\n# Square Drawer\n\nThe program must display the following when launched\n```\n$: Welcome to the square drawer\n$: Choose a height\n$user: 3\n$: Choose a width\n$user: 3\n$: Here is a square of 3x3 dimension\n---\n| |\n---\n\n\n```\n\n```ad-tip\nYou will have to use 2 dimensionals array\n```\n\n\n</details>\n<details> <summary>test</summary>\n\t+ nested list 1\n\t+ nested list 2\n\t+ markdown list 2\n</details>\n\n\n#Table of Contents\n1. [Qu'est-ce que le codex?](#example)\n2. [Example2](#example2)\n3. [Third Example](#third-example)\n4. [Fourth Example](#fourth-examplehttpwwwfourthexamplecom)\n\n\n## Example \n- [ ] task name\n- [x] task name\n\t- [x] task name\n- [x] task name\n\t- [x] task name\n\t\t- [ ] task name\n","fields":{"title":"Le Codex","date":"2022-05-13T14:43:23.383Z"},"frontmatter":{"tags":["projet","digital-garden","web","creative-coding"],"source":null}}},"pageContext":{"title":"Le Codex","slug":"/le-codex","refersTo":[],"referredBy":[],"linkedNotes":{}}},
    "staticQueryHashes": ["1408915841","342892192"]}